{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","Application","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isMobile","checkResolution","bind","assertThisInitialized","e","document","documentElement","offsetWidth","setState","addEventListener","removeEventListener","react_default","a","createElement","className","src_Header","src_Feed","src_ScrollTopButton","React","Component","ScrollTopButton","_this2","visible","styles","display","scrollHandler","resizeHandler","pageYOffset","clientHeight","_this3","undefined","isThrottled","isQueueEmpty","position","top","left","concat","querySelector","getBoundingClientRect","setTimeout","preventDefault","scrollTo","id","style","href","onClick","scrollToTop","Header","_this4","scrollIndicator","sideMenuVisible","showIndicator","showSideMenu","hideSideMenu","classList","add","body","overflow","remove","width","height","fill","float","src","alt","Feed","_this5","autoUpdate","fixedScroll","fixedScrollTrigger","showOnlyLiked","clearOld","stopUpload","postsOnScreen","totalPosts","changeSettings","changePostsCount","manualUpdateWall","fixedScrollHandler","target","checked","_this6","current","total","src_PostWall","changeCount","manualUpdate","src_Controls","change","PostObj","options","_this7","postList","list","updateParentState","update","avatar","nameLength","dateNow","Date","date","toLocaleString","day","month","hour","minute","second","img","likes","maxLikes","Math","round","random","isLiked","comments","isExpanded","views","maxViews","likeTimer","setInterval","clearInterval","viewTimer","deleteHandler","likeHandler","addCommentHandler","button","closest","toggle","timerId","form","commentText","text","value","trim","length","push","userLength","type","PostWall","_this8","localList","idCounter","maxPostCount","updateState","queueIsEmpty","wallUpdate","_this9","Promise","resolve","req","XMLHttpRequest","onload","responseURL","open","send","then","url","randomImages","postImage","avatarImage","JSON","parse","responseText","results","picture","medium","postObject","keys","min","apply","toConsumableArray","prevProps","prevState","prevDocHeight","scrollHeight","scrollPosition","snapshot","newScroll","_this10","querySelectorAll","src_Post","key","args","_this11","_this12","likedPosts","unshift","getPostById","color","currentElements","forEach","val","newPostsCount","src_ShowNewPosts","count","toString","eventHandler","elem","_this13","addRandomPost","content","renderAll","ShowNewPosts","fontWeight","Controls","_this14","onChange","title","defaultChecked","htmlFor","Post","_this15","commentsExpanded","showComments","hideComment","addCommentDecorator","src_UserInfo","userAvatar","username","src_PostContent","src_PostInfo","commentsCount","src_Comments","src_CommentInput","Comments","commentsArr","map","i","hideButton","UserInfo","PostInfo","likeIconStyle","CommentInput","onSubmit","name","maxLength","placeholder","PostContent","ReactDOM","render","src_Application","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3f742e5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index-default.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nclass Application extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = { isMobile: false };\n      this.checkResolution = this.checkResolution.bind(this);\n   }\n\n   checkResolution(e) {\n      if (document.documentElement.offsetWidth < 900 && !this.state.isMobile) this.setState({ isMobile: true });\n      else if (document.documentElement.offsetWidth > 900 && this.state.isMobile) this.setState({ isMobile: false });\n   }\n\n   componentDidMount() {\n      if (document.documentElement.offsetWidth < 900) this.setState({ isMobile: true });\n      else this.setState({ isMobile: false });\n      window.addEventListener('resize', this.checkResolution);\n   }\n   componentWillUnmount() {\n      window.removeEventListener('resize', this.checkResolution);\n   }\n\n   render() {\n      return (\n         <div className=\"wrapper\">\n            <Header isMobile={this.state.isMobile} />\n            <Feed isMobile={this.state.isMobile} />\n            <ScrollTopButton />\n         </div>\n      )\n   }\n}\n\nclass ScrollTopButton extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = { \n         visible: false,\n         styles: { display: 'none' } \n      };\n      this.visible = false;\n      this.scrollHandler = this.scrollHandler.bind(this);\n      this.resizeHandler = this.resizeHandler.bind(this);\n   }\n\n   scrollHandler() {\n      if (window.pageYOffset > document.documentElement.clientHeight / 2) {\n         if (!this.state.visible) this.setState({ visible: true });\n      } else {\n         if (this.state.visible) this.setState({ visible: false });\n      }\n   }\n\n   resizeHandler() {\n      if (this.isThrottled === undefined) this.isThrottled = false;\n      if (this.isQueueEmpty === undefined) this.isQueueEmpty = true;\n      \n      if (!this.isThrottled) {\n         this.isThrottled = true;\n         this.setState( {styles: { position: 'fixed', top: '4.4rem', left: `${document.querySelector('.feed-wrapper').getBoundingClientRect().left - 60}px`, display: `${this.state.visible ? 'block' : 'none'}` } });\n         setTimeout(() => {\n            this.isThrottled = false;\n            if (!this.isQueueEmpty) this.resizeHandler();\n         },100);\n      } else {\n         if (this.isQueueEmpty) this.isQueueEmpty = false;\n      }\n      \n   }\n\n   scrollToTop(e) {\n      e.preventDefault();\n      window.scrollTo(0, 0);\n   }\n\n   componentDidMount() {\n      document.addEventListener('scroll', this.scrollHandler);\n      window.addEventListener('resize', this.resizeHandler);\n   }\n   componentWillUnmount() {\n      document.removeEventListener('scroll', this.scrollHandler);\n      window.removeEventListener('resize', this.resizeHandler);\n   }\n\n   render() {\n      if (!document.querySelector('.feed-wrapper')) this.styles = { display: 'none' };\n      else this.styles = { position: 'fixed', top: '4.4rem', left: `${document.querySelector('.feed-wrapper').getBoundingClientRect().left - 60}px`, display: `${this.state.visible ? 'block' : 'none'}` };\n\n      return (\n         <div id=\"scrollTopButton\" style={this.styles}><a href=\"#\" onClick={this.scrollToTop}><i className=\"far fa-caret-square-up\"></i></a></div>\n      );\n   }\n}\n\nclass Header extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         scrollIndicator: false,\n         sideMenuVisible: false\n      };\n      this.showIndicator = this.showIndicator.bind(this);\n      this.showSideMenu = this.showSideMenu.bind(this);\n      this.hideSideMenu = this.hideSideMenu.bind(this);\n   }\n\n   showIndicator() {\n      if (window.pageYOffset > document.documentElement.clientHeight / 2) {\n         if (!this.state.scrollIndicator) this.setState({ scrollIndicator: true });\n      } else {\n         if (this.state.scrollIndicator) this.setState({ scrollIndicator: false });\n      }\n   }\n\n   showSideMenu(e) {\n      e.preventDefault();\n      this.setState({ sideMenuVisible: true });\n      document.querySelector('.right-side').classList.add('side-open');\n      document.body.style.overflow = 'hidden';\n   }\n\n   hideSideMenu(e) {\n      e.preventDefault();\n      this.setState({ sideMenuVisible: false });\n      document.querySelector('.right-side').classList.remove('side-open');\n      document.body.style.overflow = 'visible';\n   }\n\n   componentDidMount() {\n      document.addEventListener('scroll', this.showIndicator);\n   }\n\n   componentWillUnmount() {\n      document.removeEventListener('scroll', this.showIndicator);\n   }\n\n   render() {\n      return (\n         <div id=\"header\">\n            {this.state.sideMenuVisible ? <div className=\"overlay\" onClick={this.hideSideMenu}></div> : \"\"}\n            <div className={`fixed-header ${this.state.scrollIndicator ? 'scroll-indicator' : ''}`}>\n               <div className=\"content-wrapper header-content\">\n                  <div className=\"app-title\">\n                     {this.props.isMobile ? <div className=\"side-menu-button\"><a href=\"#\" onClick={this.showSideMenu}><i className=\"fas fa-bars\"></i></a></div> : \"\"}\n                     <div className=\"title\">LazyFeed</div>\n                  </div>\n                  <div className=\"header-right-side\">\n                     <div className=\"header-info\">\n                        <svg width=\"75\" height=\"7\">\n                           <rect width=\"100%\" height=\"100%\" style={{ fill: \"#8075a4\" }} />\n                        </svg>\n                        <svg width=\"40\" height=\"7\" style={{ float: \"right\" }}>\n                           <rect width=\"100%\" height=\"100%\" style={{ fill: \"#a4a4a4\" }} />\n                        </svg>\n                     </div>\n                     <div className=\"user-avatar\">\n                        <img src=\"./img/user-avatar.jpg\" alt=\"user-avatar\"></img>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nclass Feed extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         autoUpdate: true,\n         fixedScroll: true,\n         fixedScrollTrigger: false,\n         showOnlyLiked: false,\n         clearOld: true,\n         stopUpload: false,\n\n         postsOnScreen: 0,\n         totalPosts: 0\n      }\n      this.changeSettings = this.changeSettings.bind(this);\n      this.changePostsCount = this.changePostsCount.bind(this);\n      this.manualUpdateWall = this.manualUpdateWall.bind(this);\n      this.fixedScrollHandler = this.fixedScrollHandler.bind(this);\n   }\n\n   componentDidMount() {\n      //setting fixed scroll by default\n      if (this.state.fixedScroll) {\n         document.addEventListener('scroll', this.fixedScrollHandler);\n      }\n   }\n\n   changeSettings(e) {\n      let id = e.target.id;\n      if (id === \"autoUpdate\") this.setState({ autoUpdate: e.target.checked });\n\n      if (id === \"fixedScroll\") {\n         if (e.target.checked) {\n            document.addEventListener('scroll', this.fixedScrollHandler);\n         } else {\n            document.removeEventListener('scroll', this.fixedScrollHandler);\n         }\n         this.setState({ fixedScroll: e.target.checked });\n         this.setState({ fixedScrollTrigger: e.target.checked });\n      }\n\n      if (id === \"showOnlyLiked\") this.setState({ showOnlyLiked: e.target.checked });\n\n      if (id === \"clearOld\") this.setState({ clearOld: e.target.checked });\n\n      if (id === \"stopUpload\") this.setState({ stopUpload: e.target.checked });\n   }\n\n   fixedScrollHandler(e) {\n      if (window.pageYOffset > document.documentElement.clientHeight / 2) {\n         this.setState({ fixedScrollTrigger: true });\n      } else {\n         this.setState({ fixedScrollTrigger: false });\n      }\n   }\n\n   manualUpdateWall() {\n      this.setState({ autoUpdate: true });\n      setTimeout(() => {\n         this.setState({ autoUpdate: false });\n      }, 10);\n   }\n\n   changePostsCount(current, total) {\n      this.setState({ postsOnScreen: current, totalPosts: total });\n   }\n\n   render() {\n      return <div id=\"feed\">\n         <div className=\"content-wrapper feed-wrapper\">\n            <PostWall autoUpdate={this.state.autoUpdate} changeCount={this.changePostsCount} manualUpdate={this.manualUpdateWall} fixedScroll={this.state.fixedScrollTrigger} showOnlyLiked={this.state.showOnlyLiked} clearOld={this.state.clearOld} stopUpload={this.state.stopUpload} />\n            <Controls change={this.changeSettings} postsOnScreen={this.state.postsOnScreen} totalPosts={this.state.totalPosts} />\n         </div>\n      </div>\n   }\n}\n\nclass PostObj {\n   constructor(options) {\n      this.postList = options.list;\n      this.updateParentState = options.update;\n      this.id = options.id;\n      this.avatar = options.avatar;\n      this.nameLength = options.nameLength || 67;\n      let dateNow = new Date();\n      this.date = `${dateNow.toLocaleString('en', { day: \"2-digit\" })} ${dateNow.toLocaleString('en', { month: \"short\" })} at ${dateNow.toLocaleString('ru', { hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\" })}`;\n      this.img = options.img;\n      this.likes = 0;\n      this.maxLikes = Math.round(7 - 0.5 + Math.random() * (153 - 7 + 0.5));\n      this.isLiked = false;\n      this.comments = [];\n      this.isExpanded = false;\n      this.views = 1;\n      this.maxViews = Math.round(277 - 0.5 + Math.random() * (1770 - 277 + 0.5));\n\n      //timers\n      this.likeTimer = setInterval(() => {\n         if (this.likes >= this.maxLikes) clearInterval(this.likeTimer);\n         this.likes++;\n         this.updateParentState();\n      }, Math.round(730 - 0.5 + Math.random() * (1650 - 730 + 0.5)));\n      this.viewTimer = setInterval(() => {\n         if (this.views >= this.maxViews) clearInterval(this.viewTimer);\n         this.views++;\n         this.updateParentState();\n      }, Math.round(430 - 0.5 + Math.random() * (1000 - 430 + 0.5)));\n\n      //imported methods\n      this.deleteHandler = this.deleteHandler.bind(this);\n      this.likeHandler = this.likeHandler.bind(this);\n      this.addCommentHandler = this.addCommentHandler.bind(this);\n   }\n\n   get commentsCount() {\n      return this.comments.length;\n   }\n\n   likeHandler(e) {\n      e.preventDefault();\n      let button = e.target.closest('.likes');\n      if (!this.isLiked) {\n         button.classList.toggle('liked');\n         this.likes++;\n      } else {\n         button.classList.toggle('liked');\n         this.likes--;\n      }\n      this.isLiked = !this.isLiked;\n      this.updateParentState();\n   }\n\n   deleteHandler(e) {\n      e.preventDefault();\n\n      e.target.closest('.post').className = 'deleted';\n      //clear interval for better performance\n      clearInterval(this.timerId);\n      delete this.postList[this.id];\n      this.updateParentState();\n   }\n\n   addCommentHandler(e) {\n      e.preventDefault();\n      let form = e.target;\n      let commentText = form.text.value.trim();\n      if (!commentText.length) {\n         form.text.value = \"\";\n         return;\n      }\n      this.comments.push({\n         userLength: 75,\n         avatar: \"./img/user-avatar.jpg\",\n         text: commentText,\n         type: \"user\"\n      });\n      form.text.value = \"\";\n      this.updateParentState();\n   }\n\n}\n\nclass PostWall extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         postList: {},\n      };\n      this.localList = {};\n      this.idCounter = 0;\n      this.maxPostCount = 50;\n\n      this.manualUpdate = this.manualUpdate.bind(this);\n      this.updateState = this.updateState.bind(this);\n      //throttling\n      this.isThrottled = false;\n      this.queueIsEmpty = true;\n   }\n\n   updateState() {\n      this.wallUpdate();\n   }\n\n   addRandomPost() {\n      if (this.props.stopUpload) return;\n      new Promise(resolve => {\n         let req = new XMLHttpRequest();\n         req.onload = function () {\n            resolve(this.responseURL);\n         };\n         req.open(\"get\", \"https://picsum.photos/1024/768/?random\", true);\n         req.send();\n      }).then(url => {\n         let randomImages = { postImage: url };\n         return new Promise(resolve => {\n            let req = new XMLHttpRequest();\n            req.onload = function () {\n               randomImages.avatarImage = JSON.parse(this.responseText).results[0].picture.medium;\n               resolve(randomImages);\n            };\n            req.open(\"get\", \"https://randomuser.me/api/?inc=picture\", true);\n            req.send();\n         });\n      }).then(randomImages => {\n         let postObject = new PostObj({\n            list: this.localList,\n            update: this.updateState,\n            id: this.idCounter,\n            avatar: randomImages.avatarImage,\n            nameLength: Math.round(60 - 0.5 + Math.random() * (100 - 60 + 0.5)),\n            img: randomImages.postImage\n         });\n\n         if (this.props.clearOld) {\n            if (Object.keys(this.localList).length >= this.maxPostCount) {\n               delete this.localList[Math.min(...Object.keys(this.localList))];\n            }\n         }\n\n         if (Object.keys(this.localList).length < this.maxPostCount) {\n            this.localList[this.idCounter] = postObject;\n            this.idCounter++;\n         }\n\n         this.wallUpdate();\n\n      });\n   }\n\n   getSnapshotBeforeUpdate(prevProps, prevState) {\n      this.prevDocHeight = document.documentElement.scrollHeight;\n      this.scrollPosition = document.documentElement.scrollHeight - window.pageYOffset;\n      return { prevDocHeight: this.prevDocHeight, scrollPosition: this.scrollPosition };\n   }\n\n   componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.fixedScroll) {\n         if (document.documentElement.scrollHeight > snapshot.prevDocHeight) {\n            let newScroll = document.documentElement.scrollHeight - snapshot.scrollPosition;\n            window.scrollTo(0, newScroll);\n         }\n      }\n   }\n\n   wallUpdate() {\n      if (!this.isThrottled) {\n         this.isThrottled = true;\n         this.setState({ postList: this.localList });\n         this.props.changeCount(document.querySelectorAll('.post').length, Object.keys(this.localList).length);\n         setTimeout(() => {\n            this.isThrottled = false;\n            if (!this.queueIsEmpty) this.wallUpdate();\n         }, 200);\n      } else {\n         this.queueIsEmpty = false;\n      }\n   }\n\n   wallUpdateBackup() {\n      this.setState({ postList: this.localList });\n      this.props.changeCount(document.querySelectorAll('.post').length, Object.keys(this.localList).length);\n   }\n\n   getPostById(id) {\n      if (!this.localList[id]) return;\n      return (\n         <Post id={id} key={id} args={this.state.postList[id]} />\n      );\n   }\n\n   manualUpdate() {\n      this.props.manualUpdate();\n      setTimeout(() => {\n         this.wallUpdate();\n      }, 10);\n   }\n\n   renderAll() {\n      if (this.props.showOnlyLiked) {\n         let likedPosts = [];\n         for (let key in this.state.postList) {\n            if (this.state.postList[key].isLiked) {\n               likedPosts.unshift(this.getPostById(key));\n            }\n         }\n         if (!likedPosts.length) likedPosts.push(<div className=\"message\"><div className=\"text-message\">No one posts you liked. Press <i className={`far fa-heart`} style={{ color: \"#604d92\" }}></i> and try again</div></div>)\n         return likedPosts;\n      }\n\n      if (!this.props.autoUpdate) {\n         let currentElements = [];\n         let currentNodes = document.querySelectorAll('.post');\n\n         currentNodes.forEach((val) => {\n            if (this.getPostById(val.id)) currentElements.push(this.getPostById(val.id));\n         });\n\n         let newPostsCount = Object.keys(this.state.postList).length - currentElements.length;\n         if (newPostsCount > 0) {\n            currentElements.unshift(<ShowNewPosts key={-1} count={newPostsCount.toString()} eventHandler={this.manualUpdate} />);\n         }\n         return currentElements;\n      }\n\n      //default render\n      let elem = [];\n      for (let key in this.state.postList) {\n         elem.unshift(this.getPostById(key));\n      }\n      if (!elem.length) elem.push(<div className=\"message\" key={-2}><div className=\"text-message\">No posts available. Please wait a few seconds</div></div>);\n      return elem;\n   }\n\n   componentDidMount() {\n      //instant add first post\n      if (!Object.keys(this.state.postList).length) {\n         let postObject = new PostObj({\n            list: this.localList,\n            update: this.updateState,\n            id: this.idCounter,\n            avatar: \"./img/user-avatar.jpg\",\n            nameLength: Math.round(60 - 0.5 + Math.random() * (100 - 60 + 0.5)),\n            img: \"./img/blur-min.jpg\"\n         });\n\n         this.localList[this.idCounter] = postObject;\n         this.wallUpdate();\n         this.idCounter++;\n      }\n\n      this.timerId = setInterval(() => {\n         this.addRandomPost();\n      }, 4000);\n   }\n   componentWillUnmount() {\n      clearInterval(this.timerId);\n   }\n\n\n   render() {\n      let content;\n      content = this.renderAll();\n\n      return (\n         <div className=\"post-wall\">\n            {content}\n         </div>\n      );\n\n   }\n\n}\n\nclass ShowNewPosts extends React.Component {\n   render() {\n      return (\n         <div className=\"message\">\n            <div className=\"show-new-button\">\n               <a href=\"#\" onClick={this.props.eventHandler}>Show <span style={{ fontWeight: \"bold\" }}>{this.props.count}</span> new posts</a>\n            </div>\n         </div>\n      );\n   }\n}\n\nclass Controls extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         count: 0\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"right-side\">\n            <div className=\"controls\" onChange={this.props.change}>\n               <div className=\"controls-title\">Feed controls</div>\n\n               <div className=\"toggle-wrap\" title=\"Automatically append new posts in your feed\">\n                  <input id=\"autoUpdate\" type=\"checkbox\" defaultChecked></input>\n                  <label htmlFor=\"autoUpdate\">\n                     Autoupdate\n                  <div className=\"toggle\"><div className=\"round\"></div></div>\n                  </label>\n               </div>\n\n               <div className=\"toggle-wrap\" title=\"Page doesn't jump when you scroll down (more than half screen)\">\n                  <input id=\"fixedScroll\" type=\"checkbox\" defaultChecked></input>\n                  <label htmlFor=\"fixedScroll\">\n                     Fixed scroll\n                  <div className=\"toggle\"><div className=\"round\"></div></div>\n                  </label>\n               </div>\n\n               <div className=\"toggle-wrap\" title=\"Show only posts that you liked\">\n                  <input id=\"showOnlyLiked\" type=\"checkbox\"></input>\n                  <label htmlFor=\"showOnlyLiked\">\n                     Show only liked\n                  <div className=\"toggle\"><div className=\"round\"></div></div>\n                  </label>\n               </div>\n\n               <div className=\"toggle-wrap\" title=\"If max posts count exceeded, oldest automatically replaced\">\n                  <input id=\"clearOld\" type=\"checkbox\" defaultChecked></input>\n                  <label htmlFor=\"clearOld\">\n                     Clear old\n                  <div className=\"toggle\"><div className=\"round\"></div></div>\n                  </label>\n               </div>\n\n               <div className=\"toggle-wrap\" title=\"Dont upload new posts\">\n                  <input id=\"stopUpload\" type=\"checkbox\"></input>\n                  <label htmlFor=\"stopUpload\">\n                     Stop upload\n                  <div className=\"toggle\"><div className=\"round\"></div></div>\n                  </label>\n               </div>\n\n               <div className=\"controls-title\">App info</div>\n               <div className=\"row\">\n                  <span>Total posts:</span>\n                  <span>{this.props.totalPosts}</span>\n               </div>\n               <div className=\"row\">\n                  <span>On screen:</span>\n                  <span>{this.props.postsOnScreen}</span>\n               </div>\n               <div className=\"row\">\n                  <span>Max posts:</span>\n                  <span>50</span>\n               </div>\n\n            </div>\n\n         </div>\n      );\n   }\n}\n\nclass Post extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = { commentsExpanded: true };\n      this.showComments = this.showComments.bind(this);\n      this.hideComment = this.hideComment.bind(this);\n      this.addCommentDecorator = this.addCommentDecorator.bind(this);\n   }\n\n   showComments(e) {\n      e.preventDefault();\n      this.setState({ commentsExpanded: true });\n   }\n   hideComment(e) {\n      e.preventDefault();\n      this.setState({ commentsExpanded: false });\n   }\n\n   addCommentDecorator(e) {\n      e.preventDefault();\n      this.showComments(e);\n      this.props.args.addCommentHandler(e);\n   }\n\n   render() {\n      return (\n         <div className=\"post\" id={this.props.id}>\n            <div className=\"post-wrapper\">\n               <div className=\"delete-button\"><a href=\"#\" title=\"Delete this from history\" onClick={this.props.args.deleteHandler}><i className=\"far fa-window-close\"></i></a></div>\n               <UserInfo userAvatar={this.props.args.avatar} date={this.props.args.date} username={this.props.args.nameLength} />\n               <PostContent content={this.props.args.img} />\n               <PostInfo likes={this.props.args.likes} views={this.props.args.views} commentsCount={this.props.args.commentsCount} likeHandler={this.props.args.likeHandler} isLiked={this.props.args.isLiked} showComments={this.showComments} />\n               <Comments comments={this.props.args.comments} isExpanded={this.state.commentsExpanded} hideComment={this.hideComment} />\n               <CommentInput addCommentHandler={this.addCommentDecorator} />\n            </div>\n         </div>\n      );\n   }\n}\n\nclass Comments extends React.Component {\n   render() {\n      if (!this.props.comments.length || !this.props.isExpanded) return <div className=\"empty-comments\"></div>;\n\n      let commentsArr = this.props.comments.map((val, i) => {\n         return (\n            <div className=\"comment\" key={i}>\n               <div className=\"user-avatar\">\n                  <img src={val.avatar} alt=\"author avatar\"></img>\n               </div>\n               <div className=\"user-data\">\n                  <div className=\"username\">\n                     <svg width={val.userLength} height=\"10\">\n                        <rect width=\"100%\" height=\"100%\" style={{ fill: \"#dbdbdb\" }} />\n                     </svg>\n                  </div>\n\n                  <div className=\"comment-text\">\n                     {val.text}\n                  </div>\n               </div>\n            </div>\n         );\n      });\n\n      let hideButton = <div className=\"hide-comments-button\">\n         <a href=\"#\" onClick={this.props.hideComment}>Hide comments</a>\n      </div>\n\n      return (\n         <div className=\"comments-container\">\n            {this.props.isExpanded ? hideButton : \"\"}\n            <div className=\"comments-wrapper\">\n               {commentsArr}\n            </div>\n         </div>\n\n      );\n   }\n}\n\nclass UserInfo extends React.Component {\n   render() {\n      return (\n         <div className=\"user-info\">\n\n            <div className=\"user-avatar\">\n               <img src={this.props.userAvatar} alt=\"author\"></img>\n            </div>\n\n            <div className=\"user-data\">\n               <div className=\"username\">\n                  <svg width={this.props.username.toString()} height=\"10\">\n                     <rect width=\"100%\" height=\"100%\" style={{ fill: \"#dbdbdb\" }} />\n                  </svg>\n               </div>\n\n               <div className=\"post-date\">\n                  {this.props.date}\n               </div>\n            </div>\n\n         </div>\n      );\n   }\n}\n\nclass PostInfo extends React.Component {\n   render() {\n      let likeIconStyle = this.props.isLiked ? \"fas\" : \"far\";\n      return (\n         <div className=\"post-info\">\n            <div className=\"likes\" onClick={this.props.likeHandler}>\n               <a href=\"#\">\n                  <div className=\"icon\"><i className={`${likeIconStyle} fa-heart`}></i></div>\n                  <div className=\"count\">{this.props.likes}</div>\n               </a>\n            </div>\n            <div className=\"comments\" onClick={this.props.showComments}>\n               <a href=\"#\">\n                  <div className=\"icon\"><i className=\"far fa-comment-alt\"></i></div>\n                  <div className=\"count\">{this.props.commentsCount}</div>\n               </a>\n            </div>\n            <div className=\"views\">\n               <div className=\"icon\"><i className=\"fas fa-eye\"></i></div>\n               <div className=\"count\">{this.props.views}</div>\n            </div>\n         </div>\n      );\n   }\n}\n\nclass CommentInput extends React.Component {\n   render() {\n      return (\n         <div className=\"comment-input\">\n            <div className=\"user-avatar\">\n               <img src=\"./img/user-avatar.jpg\" alt=\"user avatar\"></img>\n            </div>\n            <form onSubmit={this.props.addCommentHandler}>\n               <input name=\"text\" type=\"text\" maxLength=\"200\" placeholder=\"Write you comment here\"></input>\n               <button className=\"submit-button\" type=\"submit\"></button>\n            </form>\n         </div>\n      );\n   }\n}\n\nclass PostContent extends React.Component {\n   render() {\n      return (\n         <div className=\"post-content\">\n            <img src={this.props.content} alt=\"\"></img>\n         </div>\n      );\n   }\n}\n\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}